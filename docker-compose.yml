version: "3.9"
name: "frelin-bilqis-24c-configs"

services:
  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/conf:/etc/nginx/conf.d
    networks:
      - app_network
    depends_on:
      - wordpress
    configs:
      - source: nginx-config

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-h", "localhost", "-p", "5432"]
      interval: 30s
      timeout: 5s
      retries: 3
    configs:
      - source: postgres-config


  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - app_network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app_network

  wordpress:
    image: wordpress:latest
    environment:
      - WORDPRESS_DB_HOST=postgres
      - WORDPRESS_DB_USER=${POSTGRES_USER}
      - WORDPRESS_DB_PASSWORD=${POSTGRES_PASSWORD}
      - WORDPRESS_DB_NAME=${POSTGRES_DB}
    ports:
      - "8081:80"
    networks:
      - app_network
    depends_on:
      - postgres

  mariadb:
    image: mariadb:latest
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 5s
      retries: 3

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - app_network

  nodejs:
    image: node:latest
    working_dir: /app
    volumes:
      - ./node_app:/app
    command: ["npm", "start"]
    ports:
      - "3000:3000"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  mariadb_data:

configs:
  nginx-config:
    file: ./nginx/nginx.conf
  postgres-config:
    file: ./postgres/postgres.conf
